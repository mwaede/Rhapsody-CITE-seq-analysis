### 06 Cluster annotation based on cluster marker identification

Idents(merged) <- "wsnn_res.0.4"
# Define an empty list to store the marker results
marker_results_wsnn.res.0.4 <- list()
# Loop over each cluster identity
for (cluster_id in unique(Idents(merged))) {
  # Find RNA markers for the current cluster
  rna_markers <- FindMarkers(merged, ident.1 = cluster_id, assay = "RNA")
  # Find ADT markers for the current cluster
  adt_markers <- FindMarkers(merged, ident.1 = cluster_id, assay = "ADT")
  # Store the marker results in the list
  marker_results_wsnn.res.0.4[[paste("Cluster", cluster_id)]] <- list(RNA = rna_markers, ADT = adt_markers)
}

# Save the marker results list to a file
saveRDS(marker_results_wsnn.res.0.4, file = "marker_results.0.4.rds")
list <- readRDS("marker_results.rds")
saveRDS(merged, file = "WNN_RNA_ADT_new13052024.rds")
# Load the marker results list
marker_results_wsnn.res.0.4 <- readRDS("marker_results.0.4.rds")
# Create a new Excel workbook
wb1 <- openxlsx::createWorkbook()
# Loop over each cluster identity
for (i in seq_along(marker_results_wsnn.res.0.4)) {
  cluster_name <- names(marker_results_wsnn.res.0.4)[i]
  cluster_data <- marker_results_wsnn.res.0.4[[i]]
  
  # Add a new worksheet for the current cluster
  openxlsx::addWorksheet(wb1, cluster_name)
  
  # Write RNA markers to the worksheet with row names
  openxlsx::writeData(wb1, cluster_name, cluster_data$RNA, startCol = 1, startRow = 1, colNames = TRUE, rowNames = TRUE)
  
  # Write ADT markers to the worksheet with row names
  openxlsx::writeData(wb1, cluster_name, cluster_data$ADT, startCol = 1, startRow = nrow(cluster_data$RNA) + 2, colNames = TRUE, rowNames = TRUE)
}

# Save the Excel workbook to a file
excel_file <- "marker_results_new.xlsx"
openxlsx::saveWorkbook(wb1, excel_file, overwrite = TRUE)

### Within the Excel file the markers for individual clusters are identified to characterize and annotate the clusters

# Annotation of wsnn_0.4 test

# load ScType R functions
source("https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/gene_sets_prepare.R"); source("https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/sctype_score_.R")
# get cell-type-specific gene sets from our in-built database (DB)
# list downloaded from https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/ScTypeDB_short.xlsx
# the list were modified regarding to the found markers 
gs_list <-  gene_sets_prepare("/work/Rhapsody data/ScTypeDB_shortnew_TRUEannotation_version6.0.xlsx", "Immune system") 

# assign cell types
es.max <-  sctype_score(scRNAseqData = GetAssayData(merged[["RNA"]], layer = "scale.data"), 
                        scaled = TRUE, 
                        gs = gs_list$gs_positive, 
                        gs2 = gs_list$gs_negative)
# merge by cluster
cL_resutls = do.call("rbind", lapply(unique(merged@meta.data[["wsnn_res.0.4"]]), function(cl){
  es.max.cl = sort(rowSums(es.max[ ,rownames(merged@meta.data[merged@meta.data[["wsnn_res.0.4"]]==cl, ])]), decreasing = !0)
  head(data.frame(cluster = cl, type = names(es.max.cl), scores = es.max.cl, ncells = sum(merged@meta.data$merged==cl)), 10)
}))

sctype_scores = cL_resutls %>% group_by(cluster) %>% top_n(n = 1, wt = scores)  

# set low-confident (low ScType score) clusters to "unknown"
sctype_scores$type[as.numeric(as.character(sctype_scores$scores)) < sctype_scores$ncells/4] = "Unknown"

merged@meta.data$MarkerBasedAnnotation = ""

for(j in unique(sctype_scores$cluster)){
  cl_type = sctype_scores[sctype_scores$cluster==j,]; 
  merged@meta.data$MarkerBasedAnnotation[merged@meta.data[["wsnn_res.0.4"]] == j] = as.character(cl_type$type[1])
}

DimPlot(merged, reduction = 'wnn.umap', 
        group.by = 'MarkerBasedAnnotation', 
        label = TRUE,
        repel = TRUE, 
        label.size = 3,
        cols = colorspace::rainbow_hcl(23)) + ggtitle("WNN UMAP; All samples") + xlab("UMAP_1") + ylab("UMAP_2") +
  theme(axis.text = element_text(size = 8), axis.title = element_text(size = 8), title = element_text(size = 10)) + theme(plot.margin = margin(1, 1, 1, 1, "cm"))

saveRDS(merged, file = "WNN_unint_RNA_ADT_21052024.rds")
